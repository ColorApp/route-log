# Generated by Django 2.2.9 on 2020-01-11 23:15

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='SyncDate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime', models.DateTimeField(auto_now=True, verbose_name='Дата синхронизации')),
            ],
            options={
                'verbose_name': 'дата синхронизации',
                'verbose_name_plural': 'даты синхронизации',
            },
        ),
        migrations.CreateModel(
            name='Point',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lon', models.CharField(blank=True, max_length=20, null=True, verbose_name='lon')),
                ('lat', models.CharField(blank=True, max_length=20, null=True, verbose_name='lat')),
                ('sync_date', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='points', to='nav_client.SyncDate', verbose_name='дата синхронизации')),
            ],
            options={
                'verbose_name': 'точка',
                'verbose_name_plural': 'точки',
            },
        ),
        migrations.CreateModel(
            name='GeoZone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=150, null=True, verbose_name='name')),
                ('nav_id', models.CharField(blank=True, max_length=150, null=True, verbose_name='id')),
                ('points', models.ManyToManyField(to='nav_client.Point', verbose_name='Точки')),
                ('sync_date', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='geozones', to='nav_client.SyncDate', verbose_name='дата синхронизации')),
            ],
            options={
                'verbose_name': 'геозона',
                'verbose_name_plural': 'геозоны',
            },
        ),
        migrations.CreateModel(
            name='FlatTableRow',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('utc', models.CharField(blank=True, max_length=150, null=True, verbose_name='utc')),
                ('values', models.CharField(blank=True, max_length=150, null=True, verbose_name='values')),
                ('sync_date', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flattablerows', to='nav_client.SyncDate', verbose_name='дата синхронизации')),
            ],
            options={
                'verbose_name': 'FlatTableRow',
                'verbose_name_plural': 'FlatTableRows',
            },
        ),
        migrations.CreateModel(
            name='FlatTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ts', models.CharField(blank=True, max_length=150, null=True, verbose_name='ts')),
                ('rows', models.ManyToManyField(to='nav_client.FlatTableRow', verbose_name='FlatTableRows')),
                ('sync_date', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flattables', to='nav_client.SyncDate', verbose_name='дата синхронизации')),
            ],
            options={
                'verbose_name': 'FlatTable',
                'verbose_name_plural': 'FlatTables',
            },
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fname', models.CharField(blank=True, max_length=150, null=True, verbose_name='fname')),
                ('mname', models.CharField(blank=True, max_length=150, null=True, verbose_name='mname')),
                ('lname', models.CharField(blank=True, max_length=150, null=True, verbose_name='lname')),
                ('licence_nr', models.CharField(blank=True, max_length=150, null=True, verbose_name='licenceNr')),
                ('phone', models.CharField(blank=True, max_length=150, null=True, verbose_name='phone')),
                ('category', models.CharField(blank=True, max_length=150, null=True, verbose_name='category')),
                ('internal_nr', models.CharField(blank=True, max_length=150, null=True, verbose_name='internalNr')),
                ('driver_cat', models.CharField(blank=True, max_length=150, null=True, verbose_name='driverCat')),
                ('nav_id', models.CharField(blank=True, max_length=150, null=True, verbose_name='id')),
                ('sync_date', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='drivers', to='nav_client.SyncDate', verbose_name='дата синхронизации')),
            ],
            options={
                'verbose_name': 'водитель',
                'verbose_name_plural': 'водители',
            },
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=150, null=True, verbose_name='name')),
                ('reg_number', models.CharField(blank=True, max_length=150, null=True, verbose_name='regNumber')),
                ('serial_number', models.CharField(blank=True, max_length=150, null=True, verbose_name='serialNumber')),
                ('garage_number', models.CharField(blank=True, max_length=150, null=True, verbose_name='garageNumber')),
                ('phone', models.CharField(blank=True, max_length=150, null=True, verbose_name='phone')),
                ('sim_number', models.CharField(blank=True, max_length=150, null=True, verbose_name='simNumber')),
                ('fuel_sort', models.CharField(blank=True, max_length=150, null=True, verbose_name='fuelSort')),
                ('brand', models.CharField(blank=True, max_length=150, null=True, verbose_name='brand')),
                ('description', models.CharField(blank=True, max_length=150, null=True, verbose_name='description')),
                ('group_ids', models.CharField(blank=True, max_length=150, null=True, verbose_name='groupIds')),
                ('nav_id', models.CharField(blank=True, max_length=150, null=True, verbose_name='id')),
                ('sync_date', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devices', to='nav_client.SyncDate', verbose_name='дата синхронизации')),
            ],
            options={
                'verbose_name': 'машина',
                'verbose_name_plural': 'машины',
            },
        ),
    ]
