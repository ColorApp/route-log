version: "3.4"

services:
  backend:
    container_name: rl_backend
    env_file: .env
    user: ${CURRENT_UID}
    build:
      context: .
      args:
        - DEBUG=${DEBUG}
      target: deploy
    restart: on-failure
    volumes:
      - .:/app/
      - ./static:/app/static
      - route_log_media:/app/media
    networks:
      private_network:

  postgres:
    container_name: rl_postgres
    env_file: .env
    image: mdillon/postgis:11-alpine
    restart: on-failure
    volumes:
      - route_log_db_data:/var/lib/postgresql/data
    networks:
      private_network:

  qcluster:
    image: route-log_backend
    container_name: rl_qcluster
    env_file: .env
    user: ${CURRENT_UID}
    volumes:
      - ./:/app/
    restart: on-failure
    entrypoint: python3
    command: ./manage.py qcluster
    depends_on:
      - backend
      - postgres
    networks:
      private_network:

  frontend:
    container_name: rl_frontend
    env_file: .env
    user: ${CURRENT_UID}
    image: node:lts-alpine
    working_dir: /app/
    volumes:
      - ./frontend:/app/
    command: ./docker-entrypoint.sh
    networks:
      private_network:
      default:

  nginx:
    container_name: rl_nginx
    image: nginx:1.17-alpine
    restart: on-failure
    ports:
      - 8000:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./static:/app/static
      - route_log_media:/app/media
    depends_on:
      - backend
      - frontend
    working_dir: /app/
    networks:
      private_network:
      default:

networks:
  private_network:
    ipam:
      driver: default
      config:
        - subnet: 172.30.0.0/16

volumes:
  route_log_db_data:
    external: True
  route_log_media:
    external: True
